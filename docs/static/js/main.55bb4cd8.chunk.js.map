{"version":3,"sources":["components/header/NotesPost.js","components/notes/NoteItem.js","components/notes/NotesList.js","components/App.js","index.js"],"names":["NotesPost","handleCreateNewNote","handleUpdateNote","handleInputNote","newNote","isEditing","resetPostNote","handleInputChange","ev","target","name","value","onSubmit","preventDefault","onReset","className","htmlFor","title","required","type","placeholder","maxLength","onChange","style","textTransform","content","rows","cols","NoteItem","id","index","handleDelete","handleEdit","onClick","NotesList","notes","singleNote","map","note","key","App","useState","allNotes","setAllNotes","setNewNote","newId","setNewId","setIsEditing","editingIndex","setEditingIndex","useEffect","data","JSON","parse","localStorage","getItem","setItem","stringify","concat","updatingNote","length","filter","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55bb4cd8.chunk.js","sourcesContent":["import React from 'react';\nimport './header.scss';\n\nconst NotesPost = ({ handleCreateNewNote, handleUpdateNote, handleInputNote, newNote, isEditing, resetPostNote }) => {\n  const handleInputChange = (ev) => {\n    const { name, value } = ev.target;\n    handleInputNote(name, value);\n  };\n\n  const handlePostNote = (ev) => {\n    ev.preventDefault();\n    isEditing ? handleUpdateNote() : handleCreateNewNote();\n  };\n\n  const handleResetNote = (ev) => {\n    ev.preventDefault();\n    resetPostNote();\n  };\n\n  return (\n    <header>\n      <form onSubmit={handlePostNote} onReset={handleResetNote} className=\"form\">\n        <h1 className=\"form__title\">Tu lista de post-Its</h1>\n        <h2 className=\"form__action\">{isEditing ? 'Edita tu nota:' : 'Crea tu nota:'}</h2>\n        <div className=\"form__container\">\n          <label htmlFor=\"title\">Título:</label>\n          <input\n            value={newNote.title}\n            required\n            type=\"text\"\n            placeholder=\"Tu título aquí\"\n            maxLength=\"15\"\n            name=\"title\"\n            onChange={handleInputChange}\n            style={{ textTransform: 'uppercase' }}\n          />\n          <label htmlFor=\"content\">Contenido:</label>\n          <textarea\n            value={newNote.content}\n            rows=\"5\"\n            cols=\"28\"\n            placeholder=\"Tu descripción aquí\"\n            name=\"content\"\n            maxLength=\"90\"\n            onChange={handleInputChange}\n            style={{ textTransform: 'uppercase' }}\n          />\n        </div>\n        <div className=\"form__buttons\">\n          <button type=\"reset\">{isEditing ? 'Descartar cambios' : 'Descartar nota'}</button>\n          <button type=\"submit\">{isEditing ? 'Actualizar nota' : 'Publicar nota'}</button>\n        </div>\n      </form>\n    </header>\n  );\n};\n\nexport default NotesPost;\n","import React from 'react';\nimport './noteItem.scss';\n\nconst NoteItem = ({ id, title, content, index, handleDelete, handleEdit }) => {\n  const getIndexToDelete = () => {\n    handleDelete(index);\n  };\n\n  const getIndexToEdit = () => {\n    handleEdit(index);\n  };\n  return (\n    <li className=\"note__item\">\n      <div className=\"note__item__container\">\n        <div className=\"note__item__container__text\">\n          <h2>\n            #{id} {title}\n          </h2>\n          <p>{content}</p>\n        </div>\n        <span className=\"note__item__container__actions\">\n          <i className=\"fas fa-pencil-alt\" index={index} onClick={getIndexToEdit}></i>\n          <i className=\"fas fa-eraser\" index={index} onClick={getIndexToDelete}></i>\n        </span>\n      </div>\n    </li>\n  );\n};\n\nexport default NoteItem;\n","import React from 'react';\nimport NoteItem from './NoteItem';\nimport './noteList.scss';\n\nconst NotesList = ({ notes, handleDelete, handleEdit }) => {\n  const singleNote = notes.map((note, index) => {\n    return (\n      <NoteItem\n        key={note.id + note.title}\n        title={note.title}\n        content={note.content}\n        id={note.id}\n        handleDelete={handleDelete}\n        handleEdit={handleEdit}\n        index={index}\n      />\n    );\n  });\n\n  return <ul className=\"note__list\">{singleNote}</ul>;\n};\n\nexport default NotesList;\n","import React, { useState, useEffect } from 'react';\nimport NotesPost from './header/NotesPost';\nimport NotesList from './notes/NotesList';\nimport './App.scss';\n\nconst App = () => {\n  const [allNotes, setAllNotes] = useState([]);\n  const [newNote, setNewNote] = useState({ title: '', content: '', id: 0 });\n  const [newId, setNewId] = useState(1);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editingIndex, setEditingIndex] = useState('');\n\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem('notes'));\n    if (data) {\n      setAllNotes(data.allNotes);\n      setNewId(data.newId);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('notes', JSON.stringify({ allNotes, newId }));\n  });\n\n  const handleCreateNewNote = () => {\n    setAllNotes((note) => note.concat(newNote));\n    setNewId(newId + 1);\n    resetPostNote();\n  };\n\n  const handleUpdateNote = () => {\n    setIsEditing(false);\n    resetPostNote();\n    const updatingNote = allNotes;\n    updatingNote[editingIndex].title = newNote.title;\n    updatingNote[editingIndex].content = newNote.content;\n    setAllNotes(updatingNote);\n  };\n\n  const resetPostNote = () => {\n    setNewNote({ ...newNote, title: '', content: '' });\n  };\n\n  const handleInputNote = (name, value) => {\n    if (allNotes.length === 0) {\n      setNewId(1);\n    }\n    setNewNote({ ...newNote, [name]: value });\n    if (newNote.id !== newId) {\n      setNewNote({ ...newNote, id: newId });\n    }\n  };\n  const handleDelete = (index) => {\n    setAllNotes(allNotes.filter((note, i) => i !== index));\n  };\n\n  const handleEdit = (index) => {\n    setNewNote(allNotes[index]);\n    setIsEditing(true);\n    setEditingIndex(index);\n  };\n\n  return (\n    <main>\n      <NotesPost\n        handleCreateNewNote={handleCreateNewNote}\n        handleUpdateNote={handleUpdateNote}\n        handleInputNote={handleInputNote}\n        newNote={newNote}\n        isEditing={isEditing}\n        resetPostNote={resetPostNote}\n      />\n\n      <NotesList notes={allNotes} handleDelete={handleDelete} handleEdit={handleEdit} />\n    </main>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}