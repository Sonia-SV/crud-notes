{"version":3,"sources":["components/menu/NotesPost.js","components/menu/Aside.js","components/notes/NoteItem.js","components/notes/NotesList.js","components/App.js","index.js"],"names":["NotesPost","handleCreateNewNote","handleUpdateNote","handleInputNote","newNote","isEditing","resetPostNote","handleInputChange","ev","target","name","value","themesSelect","allThemes","map","theme","index","key","onSubmit","preventDefault","onReset","className","htmlFor","title","required","type","placeholder","maxLength","onChange","content","rows","cols","Aside","handleUserColors","NoteItem","id","handleDelete","handleEdit","useState","noteTheme","find","singleTheme","length","style","background","color","onClick","NotesList","notes","deleteAllNotes","singleNote","note","App","allNotes","setAllNotes","setNewNote","newId","setNewId","setIsEditing","editingIndex","setEditingIndex","useEffect","data","JSON","parse","localStorage","getItem","setItem","stringify","concat","updatingNote","filter","i","href","rel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a64fedc9.chunk.js","sourcesContent":["import React from 'react';\n\nconst NotesPost = ({ handleCreateNewNote, handleUpdateNote, handleInputNote, newNote, isEditing, resetPostNote, allThemes }) => {\n  const handleInputChange = (ev) => {\n    const { name, value } = ev.target;\n    handleInputNote(name, value);\n  };\n\n  const themesSelect = allThemes.map((theme, index) => {\n    return (\n      <option key={index} value={theme.name}>\n        #{theme.name}\n      </option>\n    );\n  });\n\n  const handlePostNote = (ev) => {\n    ev.preventDefault();\n    isEditing ? handleUpdateNote() : handleCreateNewNote();\n  };\n\n  const handleResetNote = (ev) => {\n    ev.preventDefault();\n    resetPostNote();\n  };\n\n  return (\n    <section>\n      <form onSubmit={handlePostNote} onReset={handleResetNote} className=\"aside__form\">\n        <h2 className=\"aside__form__action\">{isEditing ? 'Edita tu nota:' : 'Crea tu nota:'}</h2>\n        <div className=\"aside__form__container\">\n          <label htmlFor=\"title\">Título:</label>\n          <input value={newNote.title} required type=\"text\" placeholder=\"Tu título aquí\" maxLength=\"15\" name=\"title\" onChange={handleInputChange} />\n          <label htmlFor=\"content\">Contenido:</label>\n          <textarea\n            value={newNote.content}\n            rows=\"5\"\n            cols=\"28\"\n            placeholder=\"Tu descripción aquí\"\n            name=\"content\"\n            maxLength=\"90\"\n            onChange={handleInputChange}\n          />\n          <label htmlFor=\"theme\">Categoría:</label>\n          <select name=\"theme\" onChange={handleInputChange} value={newNote.theme}>\n            {themesSelect}\n          </select>\n        </div>\n        <div className=\"aside__form__buttons\">\n          <button type=\"submit\">{isEditing ? 'Actualizar nota' : 'Publicar nota'}</button>\n          <button type=\"reset\">{isEditing ? 'Descartar cambios' : 'Descartar nota'}</button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default NotesPost;\n","import React from 'react';\nimport NotesColor from './NotesColor';\nimport NotesPost from './NotesPost';\nimport './aside.scss';\n\nconst Aside = ({ handleCreateNewNote, handleUpdateNote, handleInputNote, newNote, isEditing, resetPostNote, allThemes, handleUserColors }) => {\n  return (\n    <aside className=\"aside\">\n      <NotesPost\n        handleCreateNewNote={handleCreateNewNote}\n        handleUpdateNote={handleUpdateNote}\n        handleInputNote={handleInputNote}\n        newNote={newNote}\n        isEditing={isEditing}\n        allThemes={allThemes}\n        resetPostNote={resetPostNote}\n      />\n      {/* <NotesColor handleUserColors={handleUserColors} /> */}\n    </aside>\n  );\n};\nexport default Aside;\n","import React, { useState, useEffect } from 'react';\nimport './noteItem.scss';\n\nconst NoteItem = ({ id, title, content, index, theme, handleDelete, handleEdit, newNote, allThemes }) => {\n  const [color, setColor] = useState('#f8d613');\n  const getIndexToDelete = () => {\n    handleDelete(index);\n  };\n\n  const getIndexToEdit = () => {\n    handleEdit(index);\n  };\n  const noteTheme = allThemes.find((singleTheme) => singleTheme.name === theme);\n\n  return (\n    <li className={`note__item ${newNote.title.length !== 0 || newNote.content.length !== 0 ? 'unactive' : 'active'}`}>\n      <div className=\"note__item__container\" style={{ background: noteTheme.color }}>\n        <div className=\"note__item__container__text\">\n          <small>#{theme}</small>\n          <h2>\n            {id}º {title}\n          </h2>\n          <p>{content}</p>\n        </div>\n        <span></span>\n        <span className=\"note__item__container__actions\">\n          <i className=\"fas fa-pencil-alt\" index={index} onClick={getIndexToEdit}></i>\n          <i className=\"fas fa-eraser\" index={index} onClick={getIndexToDelete}></i>\n        </span>\n      </div>\n    </li>\n  );\n};\n\nexport default NoteItem;\n","import React from 'react';\nimport NoteItem from './NoteItem';\nimport './noteList.scss';\n\nconst NotesList = ({ notes, handleDelete, handleEdit, newNote, deleteAllNotes, allThemes }) => {\n  const singleNote = notes.map((note, index) => {\n    return (\n      <NoteItem\n        key={note.id + note.title}\n        title={note.title}\n        content={note.content}\n        id={note.id}\n        handleDelete={handleDelete}\n        handleEdit={handleEdit}\n        index={index}\n        theme={note.theme}\n        newNote={newNote}\n        allThemes={allThemes}\n      />\n    );\n  });\n\n  return (\n    <section className=\"note__section\">\n      {notes.length !== 0 ? (\n        <div className=\"note__section__button\">\n          <button onClick={deleteAllNotes}>Borrar todas las notas</button>\n        </div>\n      ) : (\n        ''\n      )}\n      <ul className=\"note__section__list\">{singleNote}</ul>\n    </section>\n  );\n};\n\nexport default NotesList;\n","import React, { useState, useEffect } from 'react';\nimport Aside from './menu/Aside';\nimport NotesList from './notes/NotesList';\nimport './App.scss';\n\nconst App = () => {\n  const [allNotes, setAllNotes] = useState([]);\n  const [newNote, setNewNote] = useState({ title: '', content: '', theme: 'general', id: 0 });\n  const [newId, setNewId] = useState(1);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editingIndex, setEditingIndex] = useState('');\n  const [allThemes, setAllThemes] = useState([\n    { name: 'general', color: '#f8d613' },\n    { name: 'trabajo', color: '#65eafc' },\n    { name: 'personal', color: '#f601aa' },\n    { name: 'urgente', color: '#ff950a' },\n  ]);\n\n  //get from local storage\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem('notes'));\n    if (data) {\n      setAllNotes(data.allNotes);\n      setNewId(data.newId);\n    }\n  }, []);\n\n  //set local storage\n  useEffect(() => {\n    localStorage.setItem('notes', JSON.stringify({ allNotes, newId }));\n  });\n\n  //add new note to AllNotes array\n  const handleCreateNewNote = () => {\n    setAllNotes((note) => note.concat(newNote));\n    setNewId(newId + 1);\n    resetPostNote();\n  };\n\n  //update existing note\n  const handleUpdateNote = () => {\n    setIsEditing(false);\n    resetPostNote();\n    const updatingNote = allNotes;\n    updatingNote[editingIndex].title = newNote.title;\n    updatingNote[editingIndex].content = newNote.content;\n    updatingNote[editingIndex].theme = newNote.theme;\n    setAllNotes(updatingNote);\n  };\n\n  //reset notes form\n  const resetPostNote = () => {\n    setNewNote({ ...newNote, title: '', content: '', theme: 'general' });\n    setIsEditing(false);\n  };\n\n  //delete all notes from allNotes array\n  const deleteAllNotes = () => {\n    setAllNotes([]);\n    setNewId(1);\n  };\n\n  //set id to currnent note\n  const handleInputNote = (name, value) => {\n    if (allNotes.length === 0) {\n      setNewId(1);\n    }\n\n    if (newNote.id !== newId) {\n      setNewNote({ ...newNote, id: newId, [name]: value });\n    } else {\n      setNewNote({ ...newNote, [name]: value });\n    }\n  };\n\n  //delete existing note\n  const handleDelete = (index) => {\n    setAllNotes(allNotes.filter((note, i) => i !== index));\n  };\n\n  //edit existing note\n  const handleEdit = (index) => {\n    setNewNote(allNotes[index]);\n    setIsEditing(true);\n    setEditingIndex(index);\n  };\n\n  const handleUserColors = (ev) => {\n    // const newColors = colors;\n    // newColors[ev.target.name] = ev.target.value;\n    // setColors(newColors);\n  };\n\n  return (\n    <>\n      <header className=\"header\">\n        <h1 className=\"header__title\">Tu lista de post-Its</h1>\n      </header>\n      <main className=\"main\">\n        <Aside\n          handleCreateNewNote={handleCreateNewNote}\n          handleUpdateNote={handleUpdateNote}\n          handleInputNote={handleInputNote}\n          newNote={newNote}\n          isEditing={isEditing}\n          resetPostNote={resetPostNote}\n          handleUserColors={handleUserColors}\n          allThemes={allThemes}\n        />\n\n        <NotesList\n          notes={allNotes}\n          handleDelete={handleDelete}\n          handleEdit={handleEdit}\n          newNote={newNote}\n          deleteAllNotes={deleteAllNotes}\n          allThemes={allThemes}\n        />\n      </main>\n      <footer className=\"footer\">\n        <p>\n          A CRUD project by{' '}\n          <a href=\"https://sonia-sv.github.io/portfolio/#/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            Sonia Sanz Vivas\n          </a>\n        </p>\n      </footer>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}